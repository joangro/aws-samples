Parameters:
  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet to use
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Key name to ssh onto the instance
Resources:
  Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          install:
            - php
            - httpd
        httpd:
          commands:
            01_update:
              command: yum update -y
            02_install_httpd:
              command: yum install httpd -y 
            03_start_httpd: 
              command: systemctl start httpd
            04_enable_httpd:
              command: systemctl enable httpd
        php:
          commands:
            01_update:
              command:  yum update -y
            02_install_php:
             command:  yum install php -y
    Properties:
      SubnetId:
        !Ref Subnet
      ImageId: ami-07d9160fa81ccffb5
      KeyName: !Ref KeyName
      InstanceType: t3.micro
      SecurityGroupIds:
      - !GetAtt SecurityGroup.GroupId
      UserData: !Base64
        Fn::Base64: !Sub |
           #!/bin/bash -xe
           /opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource Instance --configsets install --region ${AWS::Region}
           /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource Instance --region ${AWS::Region} 
    DependsOn: SecurityGroup
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: vpc-0ec36d03d49807b45

  ELB:
    Type: AWS::ElasticLoadBalancing::LoadBalancer
    Properties:
      Subnets:
        - !Ref Subnet
      SecurityGroups:
      - !Ref SecurityGroup
      Listeners:
      - LoadBalancerPort: 80
        InstancePort: 80
        Protocol: TCP
      Instances:
      - Ref: Instance
    DependsOn: Instance
#  WaitConditionHandle:
#    Type: AWS::CloudFormation::WaitConditionHandle
#  WaitCondition:
#    Type: AWS::CloudFormation::WaitCondition
#    DependsOn: Instance
#    Properties:
#      Handle:
#        !Ref WaitConditionHandle
#      Timeout: 300
#    CreationPolicy:
#      ResourceSignal:
#        Timeout: PT15M
#        Count: 5
#
